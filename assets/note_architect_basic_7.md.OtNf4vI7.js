import{_ as l,c as t,o as r,a4 as o,aS as a,aT as s,aU as i,aV as n,aW as e}from"./chunks/framework.D_wpDLlF.js";const f=JSON.parse('{"title":"7 系统配置与性能评价","description":"","frontmatter":{},"headers":[],"relativePath":"note/architect/basic/7.md","filePath":"note/architect/basic/7.md","lastUpdated":1723037866000}'),g={name:"note/architect/basic/7.md"},h=o('<h1 id="_7-系统配置与性能评价" tabindex="-1">7 系统配置与性能评价 <a class="header-anchor" href="#_7-系统配置与性能评价" aria-label="Permalink to &quot;7 系统配置与性能评价&quot;">​</a></h1><h2 id="性能指标" tabindex="-1">性能指标 <a class="header-anchor" href="#性能指标" aria-label="Permalink to &quot;性能指标&quot;">​</a></h2><h3 id="计算机" tabindex="-1">计算机 <a class="header-anchor" href="#计算机" aria-label="Permalink to &quot;计算机&quot;">​</a></h3><p>对计算机评价的主要性能指标有：</p><ul><li><strong>时钟频率（主频）</strong></li><li><strong>运算速度</strong></li><li><strong>运算精度</strong></li><li><strong>内存的存储容量</strong></li><li><strong>存储器的存取周期</strong></li><li><strong>数据处理速率PDR（processing data rate）</strong></li><li><strong>吞吐率</strong></li><li><strong>各种响应时间</strong></li><li><strong>各种利用率</strong></li><li><strong>RASIS特性</strong><ul><li><strong>可靠性 Reliability</strong></li><li><strong>可用性 Acailability</strong></li><li><strong>可维护性 Sericeability</strong></li><li><strong>完整性和安全性 Integraity and Security</strong></li></ul></li><li><strong>平均故障响应时间</strong></li><li><strong>兼容性</strong></li><li><strong>可扩充性</strong></li><li><strong>性能价格比</strong></li></ul><h3 id="路由器" tabindex="-1">路由器 <a class="header-anchor" href="#路由器" aria-label="Permalink to &quot;路由器&quot;">​</a></h3><p>对路由器评价的主要性能指标有：</p><ul><li><strong>设备吞吐量</strong></li><li><strong>端口吞吐量</strong></li><li>全双工线速转发能力</li><li>背靠背帧数</li><li>路由表能力</li><li>背板能力</li><li><strong>丢包率</strong></li><li><strong>时延</strong></li><li><strong>时延抖动</strong></li><li>VPN支持能力</li><li>内部时钟精度</li><li>队列管理机制</li><li>端口硬件队列数</li><li>分类业务带宽保证</li><li>RSVP</li><li>IP Diff Serv</li><li>CAR支持</li><li>冗余</li><li>热插拔组件</li><li>路由器冗余协议</li><li>网管</li><li>基于Web的管理</li><li>网管类型</li><li>带外网管支持</li><li>网管粒度</li><li>计费能力、协议</li><li>分组语音支持方式</li><li>协议支持</li><li>语音压缩能力</li><li>端口密度</li><li>信令支持</li></ul><h3 id="交换机" tabindex="-1">交换机 <a class="header-anchor" href="#交换机" aria-label="Permalink to &quot;交换机&quot;">​</a></h3><p>对交换机评价的主要性能指标有：</p><ul><li>交换机类型</li><li>配置</li><li>支持的网络类型</li><li>最大ATM端口数</li><li>最大SONET端口数</li><li>....</li></ul><h3 id="网络" tabindex="-1">网络 <a class="header-anchor" href="#网络" aria-label="Permalink to &quot;网络&quot;">​</a></h3><p>评价网络的性能指标：</p><ul><li><strong>设备级性能指标</strong></li><li><strong>网络级性能指标</strong></li><li><strong>应用级性能指标</strong></li><li><strong>用户级性能指标</strong></li><li><strong>吞吐量</strong></li></ul><h3 id="操作系统" tabindex="-1">操作系统 <a class="header-anchor" href="#操作系统" aria-label="Permalink to &quot;操作系统&quot;">​</a></h3><p>评价操作系统的性能指标有：</p><ul><li><strong>系统的可靠性</strong></li><li><strong>系统的吞吐率（量）</strong></li><li><strong>系统响应时间</strong></li><li><strong>系统资源利用率</strong></li><li><strong>可移植性</strong></li></ul><h3 id="数据库管理系统" tabindex="-1">数据库管理系统 <a class="header-anchor" href="#数据库管理系统" aria-label="Permalink to &quot;数据库管理系统&quot;">​</a></h3><p>衡量数据库管理系统的主要性能指标包括数据库本身和管理系统两部分</p><ul><li><strong>数据库的大小</strong></li><li><strong>数据库中表的数量</strong></li><li><strong>单个表的大小</strong></li><li><strong>表中允许的记录（行）数量</strong></li><li><strong>单个记录（行）的大小</strong></li><li><strong>表上所允许的索引数量</strong></li><li><strong>数据库所允许的索引数量</strong></li><li><strong>最大并发事务处理能力</strong></li><li><strong>负载均衡能力</strong></li><li><strong>最大连接数等</strong></li></ul><h3 id="web服务器" tabindex="-1">WEB服务器 <a class="header-anchor" href="#web服务器" aria-label="Permalink to &quot;WEB服务器&quot;">​</a></h3><ul><li><strong>最大并发连接数</strong></li><li><strong>响应延迟</strong></li><li><strong>吞吐量</strong></li></ul><h3 id="考试真题" tabindex="-1">考试真题 <a class="header-anchor" href="#考试真题" aria-label="Permalink to &quot;考试真题&quot;">​</a></h3><p><img src="'+a+'" alt=""></p><p>答案：D C</p><p><img src="'+s+'" alt=""></p><p>答案：D A</p><h2 id="性能评价方法" tabindex="-1">性能评价方法 <a class="header-anchor" href="#性能评价方法" aria-label="Permalink to &quot;性能评价方法&quot;">​</a></h2><h3 id="性能评测的常用方法" tabindex="-1">性能评测的常用方法 <a class="header-anchor" href="#性能评测的常用方法" aria-label="Permalink to &quot;性能评测的常用方法&quot;">​</a></h3><ol><li><strong>时钟频率</strong>。主频越高，速度越快</li><li><strong>指令执行速度</strong>。计量单位KIPS、MIPS（mips指的是百万级）</li><li><strong>等效指令速度法</strong>。统计各类指令在程序中所占比例，并进行折算，是一种固定比例法。</li><li><strong>数据处理速率</strong>（Processing Data Rate，PDR）法。采用计算PDR值的方法来衡量机器性能，PDR值越大，机器性能越好。PDR与每条指令和每个操作数的平均位数以及每条指令的平均运算速度有关。</li></ol><p><strong>基准程序法</strong>（Benchmark）：把<strong>应用程序中用的最多、最频繁的那部分核心程序作为评价计算机性能的标准程序，称为基准测试程序</strong>（Benchmark）。是目前被用户一致承认的测试性能的较好方法，有多种多样的基准程序，包括</p><ol><li><strong>整数测试程序</strong>。同一厂商的机器，采用相同的体系结构，用相同的基准程序测试，得到的mips值越大，一般说明机器速度越快。</li><li><strong>浮点测试程序</strong>。指标mflops（理论峰值浮点速度）</li><li><strong>SPEC 基准程序</strong>（SPEC Benchmark）。重点面向处理器性能的基准程序集，将被测计算机的执行时间标准化，即将被测计算机的执行时间除以一个参考处理器的执行时间。</li><li><strong>TPC 基准程序</strong>。用于评测计算机在事务处理、数据库处理、企业管理与决策支持系统等方面的性能。其中， <ol><li><strong>TPC-C 是在线事务处理（On-line Transaction Processing，OLTP）的基准程序</strong></li><li><strong>TPC-D 是决策支持的基准程序。</strong></li><li><strong>TPC-E 作为大型企业信息服务的基准程序</strong></li></ol></li></ol><p>大多数情况下，为测试新系统的性能，用户必须依评价程序来评价机器的性能。下面列出了 4 种评价程序，<strong>它们评测的准确程度依次递减：真实的程序、核心程序、小型基准程序、合成基准程序。</strong></p><h3 id="考试真题-1" tabindex="-1">考试真题 <a class="header-anchor" href="#考试真题-1" aria-label="Permalink to &quot;考试真题&quot;">​</a></h3><p><img src="'+i+'" alt=""></p><p>答案：C A</p><p><img src="'+i+'" alt=""></p><p>答案：C B</p><h2 id="阿姆达尔解决方法" tabindex="-1">阿姆达尔解决方法 <a class="header-anchor" href="#阿姆达尔解决方法" aria-label="Permalink to &quot;阿姆达尔解决方法&quot;">​</a></h2><p>阿姆达尔定律主要用于系统性能改进的计算中。阿姆达尔定律是指<strong>计算机系统中对某一部件采用某种更快的执行方式所获得的系统性能改变程度，取决于这种方式被使用的频率，或所占总执行时间的比例。</strong></p><p>阿姆达尔定律定义了采用特定部件所取得的加速比。假定我们使用某种增强部件，计算机的性能就会得到提高，那么加速比就是下式所定义的比率：</p><p><img src="'+n+'" alt=""></p><h3 id="考试真题-2" tabindex="-1">考试真题 <a class="header-anchor" href="#考试真题-2" aria-label="Permalink to &quot;考试真题&quot;">​</a></h3><p><img src="'+e+'" alt=""></p><p>答案：B</p>',45),c=[h];function p(d,u,m,_,b,P){return r(),t("div",null,c)}const k=l(g,[["render",p]]);export{f as __pageData,k as default};
